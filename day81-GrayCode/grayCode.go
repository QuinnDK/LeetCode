package main

/*
格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。

给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。即使有多个不同答案，你也只需要返回其中一种。

格雷编码序列必须以 0 开头。

示例 1:

输入: 2
输出: [0,1,3,2]
解释:
00 - 0
01 - 1
11 - 3
10 - 2

对于给定的 n，其格雷编码序列并不唯一。
例如，[0,2,3,1] 也是一个有效的格雷编码序列。

00 - 0
10 - 2
11 - 3
01 - 1
*/

func grayCode(n int) []int {
	ret, head := []int{0}, 1
	for i := 0; i < n; i++ {
		for j := len(ret) - 1; j >= 0; j-- { // 倒序遍历： 下一个跟上一个只有一个位数有差异
			ret = append(ret, head+ret[j])
		}
		head <<= 1 // 第i+1位置1
	}
	return ret
}

//没懂
/*
f(n) = f(n-1)U R(n), 其中R(n)可由f(n-1)的倒序后的每一位前面加上1得到。

ret = [0], head = 1, n = 2
i = 0, j = 0 => ret[0,1], head = 2
i = 1, j = 1 => ret=[0,1,3], head = 2
i = 1, j = 0 => ret=[0,1,3,2] head = 4
return ret
*/
